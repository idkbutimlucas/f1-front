{"version":3,"sources":["./src/app/championships/pages/championships-detail/championships-detail.component.ts","./src/app/championships/pages/championships-detail/championships-detail.component.html","./src/app/championships/components/championships-form/championships-form.component.ts","./src/app/championships/components/championships-form/championships-form.component.html","./src/app/championships/championships.module.ts","./src/app/championships/pages/championships-list/championships-list.component.ts","./src/app/championships/pages/championships-list/championships-list.component.html","./src/app/championships/championships.component.ts","./src/app/championships/championships.component.html","./src/app/championships/championships-routing.module.ts"],"names":[],"mappings":"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","file":"championships-championships-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Championships } from 'src/app/core/models/championships';\nimport { ChampionshipsService } from 'src/app/core/services/http/championships.service';\n\n@Component({\n  selector: 'app-championships-detail',\n  templateUrl: './championships-detail.component.html',\n  styleUrls: ['./championships-detail.component.scss']\n})\nexport class ChampionshipsDetailComponent implements OnInit {\n  championshipsId?:number;\n  championships$? : Observable<Championships>;\n \n  constructor(private _championshipsService: ChampionshipsService, private _activateRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.championshipsId = Number(this._activateRoute.snapshot.paramMap.get('id'));\n\n    if (this.championshipsId) {\n      this.fetchData(this.championshipsId);\n    }\n  }\n\n  fetchData(id: number): void {\n    this.championships$ = this._championshipsService.getById(id);\n  }\n\n}\n","<div class=\"viewport\">\n    works\n    {{championships$|async|json}}\n    {{championshipsId}}\n</div>","import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Championships } from 'src/app/core/models/championships';\nimport { ChampionshipsFormData } from 'src/app/core/models/championships-form-data';\nimport { ChampionshipsService } from 'src/app/core/services/http/championships.service';\n\n\n@Component({\n  selector: 'app-championships-form',\n  templateUrl: './championships-form.component.html',\n  styleUrls: ['./championships-form.component.scss']\n})\nexport class ChampionshipsFormComponent implements OnInit {\n  championshipsForm: FormGroup;\n  formAction: string;\n\n  constructor(private _snackBar: MatSnackBar,private fb: FormBuilder,private _championshipsService:ChampionshipsService,private _dialogRef: MatDialogRef<ChampionshipsFormComponent>,@Inject(MAT_DIALOG_DATA) public data: ChampionshipsFormData) \n  {\n    this.formAction = data.toUpdate? \"Modifier\" : \"Ajouter\";\n\n    if (data.toUpdate) {\n      this.championshipsForm = this.fb.group({\n        name: [data.championships.name, [Validators.required,this.noWhitespaceValidator]],\n        years: [data.championships.years, [Validators.required]],\n        logo: [data.championships.logo, [Validators.required,this.noWhitespaceValidator]],\n      })\n    }\n    else {\n      this.championshipsForm = this.fb.group({\n        name: ['', [Validators.required,this.noWhitespaceValidator]],\n        years: ['', [Validators.required]],\n        logo: ['', [Validators.required,this.noWhitespaceValidator]],\n      })\n    }\n  }\n\n  ngOnInit() {\n  }\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action);\n  }\n  onSubmit(championships: Championships){\n    if (this.championshipsForm.valid) {\n\n      if (this.data.toUpdate) {\n        championships.id = this.data.championships.id;\n        this._championshipsService.put(championships).subscribe((next) => {\n          console.log(\"Championnat modifié\");\n          this.openSnackBar(\"Championnat modifié\",\"😊\");\n          this.championshipsForm.reset();\n          this._dialogRef.close();\n        })\n      } else {\n        this._championshipsService.post(championships).subscribe((next) => {\n          console.log(\"Championnat ajouté\");\n          this.openSnackBar(\"Championnat ajouté\",\"😊\");\n          this.championshipsForm.reset();\n          this._dialogRef.close();\n        })\n      }\n\n\n    }\n  }\n  public noWhitespaceValidator(control: FormControl) {\n    const isWhitespace = (control.value || '').trim().length === 0;\n\n    const isValid = !isWhitespace;\n    return isValid ? null : { 'whitespace': true };\n  }\n}\n\n","    <form [formGroup]=\"championshipsForm\" (ngSubmit)=\"onSubmit(championshipsForm.value)\">\n      <h2 mat-dialog-title>Championship FORM</h2>\n      <mat-dialog-content class=\"mat-typography\">\n        <div>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Championship name</mat-label>\n            <input matInput type=\"text\" formControlName=\"name\" placeholder=\"F...\" required>\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Years</mat-label>\n            <input matInput type=\"number\" formControlName=\"years\" placeholder=\"2021\" required>\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Championship Logo</mat-label>\n            <input matInput type=\"text\" placeholder=\"Link to the logo\" formControlName=\"logo\" required>\n          </mat-form-field>\n        </div>\n      </mat-dialog-content>\n      <mat-dialog-actions align=\"end\">\n        <button mat-button mat-dialog-close>Cancel</button>\n        <button mat-button type=\"submit\" cdkFocusInitial [disabled]=\"!championshipsForm.valid\">{{formAction}}</button>\n      </mat-dialog-actions>\n    </form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChampionshipsComponent } from './championships.component';\nimport { ChampionshipsListComponent } from './pages/championships-list/championships-list.component';\nimport { ChampionshipsDetailComponent } from './pages/championships-detail/championships-detail.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ChampionshipsRoutingModule } from './championships-routing.module';\nimport { ChampionshipsFormComponent } from './components/championships-form/championships-form.component';\n\n\n\n@NgModule({\n  declarations: [\n    ChampionshipsComponent,\n    ChampionshipsListComponent,\n    ChampionshipsDetailComponent,\n    ChampionshipsFormComponent\n  ],\n  imports: [\n    CommonModule,SharedModule,ChampionshipsRoutingModule\n  ]\n})\nexport class ChampionshipsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable } from 'rxjs';\nimport { Championships } from 'src/app/core/models/championships';\nimport { ChampionshipsFormData } from 'src/app/core/models/championships-form-data';\nimport { ChampionshipsService } from 'src/app/core/services/http/championships.service';\nimport { ChampionshipsFormComponent } from '../../components/championships-form/championships-form.component';\n\n@Component({\n  selector: 'app-championships-list',\n  templateUrl: './championships-list.component.html',\n  styleUrls: ['./championships-list.component.scss']\n})\nexport class ChampionshipsListComponent implements OnInit {\n\n  championships$? : Observable<Championships[]>;\n \n  constructor(private _snackBar: MatSnackBar,private _championshipsService: ChampionshipsService,public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n\n  loadData(){\n   this.championships$ = this._championshipsService.get();\n  } \n\n  delete(championships: Championships){\n    this._championshipsService.delete(championships).subscribe(next => {\n      this.loadData();\n      this.openSnackBar(\"Supprimer le championnat\",\"😭\");\n    })\n  }\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action);\n  }\n  openDialog(toUpdate: boolean, championships: Championships){\n\n    const ChampionshipsFormData: ChampionshipsFormData = {\n      toUpdate: toUpdate,\n      championships: championships\n    };\n\n    const dialogRef = this.dialog.open(ChampionshipsFormComponent,{\n      data: ChampionshipsFormData\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      this.loadData();\n    });\n  }\n \n  \n  }\n\n","<div class=\"viewport\" >\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"5px\" fxLayoutAlign=\"center center\" >\n        <div *ngFor = \"let championship of championships$ | async \">\n                <mat-card class=\"container border\">\n                    <div fxLayoutAlign=\"end end\">\n                        <img mat-card-image src=\"{{championship.logo}}\" alt=\"\" width=\"350\" max-height=\"110\">\n                        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n                            <mat-icon>more_vert</mat-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\">\n                            <button mat-menu-item (click)=\"delete(championship)\" color=\"warn\">\n                                <mat-icon>delete</mat-icon>\n                            <span>Delete</span>\n                            </button>\n                            <button mat-menu-item (click)=\"openDialog(true, championship)\" >\n                                <mat-icon>edit</mat-icon>\n                            <span>Edit</span>\n                            </button>\n                        </mat-menu>\n                    </div>\n                    <mat-card-content>\n                        <mat-card-title>{{championship.name}}</mat-card-title>\n                        <mat-card-subtitle>{{championship.years}}</mat-card-subtitle>\n                        <p>En savoir d'avantage sur : {{championship.name}}.</p>\n                    </mat-card-content>\n                    <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"space-evenly none\" >\n                        <a routerLink=\"{{championship.id}}/teams\">\n                            <button fxFlex mat-raised-button color=\"primary\">Équipe</button>\n                        </a>\n                        <a routerLink=\"{{championship.id}}/leaderboards\">\n                            <button mat-raised-button color=\"primary\">Classement</button>\n                        </a>\n                        <a routerLink=\"{{championship.id}}/drivers\">\n                            <button fxFlex mat-raised-button color=\"primary\">Pilote</button>\n                        </a>\n                    </mat-card-actions>\n                </mat-card>\n        </div>\n    </div>\n    <div fxLayout=\"column\" fxLayoutAlign=\"end end\" class=\"example-button-container\">\n        <button class=\"button-add\" (click)=\"openDialog(false, undefined!)\" router mat-fab color=\"primary\">\n            <mat-icon>add</mat-icon>\n        </button>\n  </div>\n</div>    \n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-championships',\n  templateUrl: './championships.component.html',\n  styleUrls: ['./championships.component.scss']\n})\nexport class ChampionshipsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NotFoundComponent } from './../shared/components/not-found/not-found.component';\nimport { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChampionshipsComponent } from './championships.component';\nimport { ChampionshipsListComponent } from './pages/championships-list/championships-list.component';\nimport { ChampionshipsDetailComponent } from './pages/championships-detail/championships-detail.component';\nimport { ChampionshipsFormComponent } from './components/championships-form/championships-form.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChampionshipsComponent,\n    children: [\n      {\n        path: '',\n        component: ChampionshipsListComponent,\n      },\n      {\n        path: ':id',\n        component: ChampionshipsDetailComponent,\n      },\n      { \n        path: '**',\n        component: NotFoundComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    component: NotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChampionshipsRoutingModule { }\n"],"sourceRoot":"webpack:///"}